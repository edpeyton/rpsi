% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{psi}
\alias{psi}
\title{Calculate PSI metric}
\usage{
psi(x, y, var, count, date = NULL, random_base = TRUE)
}
\arguments{
\item{x}{A data frame containing the distinct groups and counts of the base distribution. Must contain columns \code{var} and \code{count}.}

\item{y}{The comparison distribution in the same format as \code{x}.}

\item{var}{The name of the column in \code{x} and \code{y} representing the discrete groups of the distributions.}

\item{count}{The name of the column in \code{x} and \code{y} representing the count of observations in each group.}

\item{date}{(Optional) The name of a column in \code{y} representing a date variable. The column \code{date} in \code{y} should be of class "Date". This is useful if making multiple
comparisons between \code{y} and \code{x} over time.}

\item{random_base}{A logical value indicating whether the base distribution used for comparison is considered random or if it is considered a population.

When \code{TRUE}, the values of \code{count} in the base distribution \code{x}}
}
\value{
An object of class \code{rpsi}. See \link[rpsi]{rpsi} for details of the object class.
}
\description{
Calculates the Population Stability Index (PSI) metric with thresholds calculated from Yurdakul, Bilal (2018).\loadmathjax
}
\details{
See \href{https://www.risk.net/journal-of-risk-model-validation/7725371/statistical-properties-of-the-population-stability-index}{Yurdakul & Naranjo (2020)} for details. 

The PSI is shown to be distributed as

\mjdeqn{PSI\sim\chi^{2}_{B-1}\cdot(1/M + 1/N)}{pdflatex}

where \mjeqn{B}{ascii} is the number of discrete values of the distribution and \mjeqn{M}{ascii}, \mjeqn{N}{ascii} are the sizes of the comparison and base distributions, respectively.
}
\examples{
\donttest{
library(rpsi)
library(dplyr)

p = c(0.05, 0.45, 0.45, 0.05)

x = data.frame(table(factor(sample(LETTERS[1:length(p)], 500, replace = TRUE, prob = p))))
y = data.frame(table(factor(sample(LETTERS[1:length(p)], 500, replace = TRUE, prob = p))))

res = psi(x, y, var = "Var1", count = "Freq")
plot(res, crit_val = 0.95)

#Example over time
p = c(0.1, 0.2, 0.5, 0.05, 0.05, 0.1)
N = 1000

x = data.frame(TYPE = factor(LETTERS[1:length(p)]), VALUE = N*p)
y = sapply(seq.Date(as.Date("2010-01-01"), as.Date("2013-12-01"), "month"), function(i) {
  data.frame(TYPE = factor(sample(LETTERS[1:length(p)], 100, replace = TRUE, prob = p))) \%>\% 
  mutate(DATE = i)
}, simplify = FALSE) \%>\% 
bind_rows() \%>\% 
group_by(DATE, TYPE, .drop = FALSE) \%>\% 
summarise(VALUE = n(), .groups = "keep") \%>\% 
ungroup()
res = psi(x, y, var = "TYPE", count = "VALUE", date = "DATE")
plot(res, crit_val = 0.95)


# Example with random_base = FALSE
x = data.frame(TYPE = factor(LETTERS[1:length(p)]), VALUE = p)
res = psi(x, y, var = "TYPE", count = "VALUE", date = "DATE", random_base = FALSE)
plot(res, crit_val = 0.95)

}

}
